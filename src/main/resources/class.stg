entry(schema) ::= <<

public class <schema.name> {

  <if(first(schema.fields))>
  <genVariables(first(schema.fields), rest(schema.fields))>
  <endif>

  public <schema.name>(<if(first(schema.fields))><genParams(first(schema.fields), rest(schema.fields))><endif>) {
    <if(first(schema.fields))><genConstructorBody(first(schema.fields), rest(schema.fields))><endif>
  }
  <if(first(schema.fields))>

  <genGetters(first(schema.fields), rest(schema.fields))><endif>
  <if(first(schema.fields))>
  <genSetters(first(schema.fields), rest(schema.fields))><endif>
}

>>

genParams(input, other) ::= <<
<input.type> <input.name><if(other)>, <genParams(first(other), rest(other))><endif>
>>

genVariables(input, other) ::= <<
<input.type> <input.name>;<if(other)>
<genVariables(first(other), rest(other))><endif>
>>

genConstructorBody(input, other) ::= <<
this.<input.name> = <input.name>;<if(other)>
<genConstructorBody(first(other), rest(other))><endif>
>>

genGetters(input, other) ::= <<
public <input.type> get<input.name>() {
  return <input.name>;
}
<if(other)>

<genGetters(first(other), rest(other))><endif>
>>

genSetters(input, other) ::= <<
public void set<input.name>(<input.type>, <input.name>) {
  this.<input.name> = <input.name>;
}
<if(other)>

<genSetters(first(other), rest(other))><endif>
>>
